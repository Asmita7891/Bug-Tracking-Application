<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>